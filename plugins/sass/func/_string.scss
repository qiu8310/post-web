@charset "UTF-8";

/// Return last index of `$needle` in `$string`.
/// @since 1.2.0
/// @param {String} $string - string to search in
/// @param {String} $needle - substring to search for
/// @return {Number}
@function str-last-index($string, $needle) {
  $index: str-index($string, $needle);
  $result: $index;

  @if $index {
    @for $i from $index + str-length($needle) through str-length($string) {
      @if str-slice($string, $i, $i + str-length($needle) - 1) == $needle {
        $result: $i;
      }
    }
  }

  @return $result;
}



/// Repeat `$string` `$times` times.
/// @since 1.2.0
/// @param {String} $string - string to repeat
/// @param {Number} $times  - number of times to repeat $string
/// @return {String}
@function str-repeat($string, $times) {
  $result: "";

  @for $i from 1 through $times {
    $result: $result + $string;
  }

  @return $result;
}

/// Replace `$search` with `$replace` in `$string`.
/// @since 1.2.0
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ("") - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}
