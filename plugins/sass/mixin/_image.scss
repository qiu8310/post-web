@charset "UTF-8";

@mixin image-w($icon, $ratio: 1) {
  width: image-w($icon, $ratio);
}
@mixin image-h($icon, $ratio: 1) {
  height: image-h($icon, $ratio);
}
@mixin image-s($icon, $ratio: 1) {
  width: image-w($icon, $ratio);
  height: image-h($icon, $ratio);
}

@mixin bg($icon, $bg-attributes: no-repeat, $ratio: 1) {
  $file: image-src($icon);
  @if not $file {
    @error 'Not found bg file' $icon;
  }

  @if $bg-attributes {
    background: join(image-url($file), $bg-attributes, 'space');
  } @else {
    background-image: image-url($file);
  }
  @if $ratio != 1 {
    background-size: image-s($icon, $ratio);
  }
}
@mixin bg-2x($icon, $bg-attributes: no-repeat) {
  @include bg($icon, $bg-attributes, 0.5);
}



$_sprites: ();
$_sprites-call: ();
$_sprite-default-dir: sp;

@function _get-sprite-map($folder) {
  $sprite-map: null;
  @if map-has-key($_sprites, $folder) {
    $sprite-map: map-get($_sprites, $folder);

    $call-time: map-get($_sprites-call, $folder);
    $_sprites-call: map-set($_sprites-call, $folder, $call-time + 1) !global;

  } @else {
    // Only PNG files can be made into css sprites at this time.
    // $sprite-map: sprite-map("#{$folder}/*.png", $layout: smart, $spacing: 4px);
    $sprite-map: sprite-map("#{$folder}/*.png", $spacing: 4px);
    $_sprites: map-set($_sprites, $folder, $sprite-map) !global;
    $_sprites-call: map-set($_sprites-call, $folder, 1) !global;
  }
  @return $sprite-map;
}


@mixin sprite-helper($type, $icon, $size, $ratio) {
  $ratio: d2($ratio);

  // the sprite folder
  $index: str-last-index($icon, '/');
  $folder: if($index, str-slice($icon, 1, $index - 1), $_sprite-default-dir);
  $basename: if($index, str-slice($icon, $index + 1), $icon);

  $file: image-src("#{$folder}/#{$basename}");
  @if not $file {
    @error 'Not found sprite file for' $icon;
  }

  $w: image-width($file);
  $h: image-height($file);

  $rw: relative(nth($ratio, 1), $w);
  $rh: relative(nth($ratio, 2), $h);

  $sprite-map: _get-sprite-map($folder);
  $sprite-path: sprite-path($sprite-map);
  $sprite-pos: sprite-position($sprite-map, $basename);

  @if $type == 'holder' or $type == 'default' {
    background-image: sprite-url($sprite-map);
    // 如果都是 1，就没必要输出 bg-size 了
    @if $rw != 1 or $rh != 1 {
      background-size: image-s($sprite-path, $rw $rh);
    }
  }

  @if $type == 'pos'or $type == 'default' {
    background-position: nth($sprite-pos, 1) * $rw nth($sprite-pos, 2) * $rh;
  }

  @if $size {
    @if type-of($size) == 'string' {
      display: $size;
    }
    width: image-w($file, $rw);
    height: image-h($file, $rh);
  }
}

@mixin sprite($icon, $size: true, $ratio: 1) {
  @include sprite-helper('default', $icon, $size, $ratio);
}
@mixin sprite-2x($icon, $size: true) {
  @include sprite($icon, $size, 0.5);
}


@mixin sprite-pos($icon, $size: false, $ratio: 1) {
  @include sprite-helper('pos', $icon, $size, $ratio);
}
@mixin sprite-pos-2x($icon, $size: false) {
  @include sprite-pos($icon, $size, 0.5);
}

@mixin sprite-holder($icon, $size: false, $ratio: 1) {
  @include sprite-helper('holder', $icon, $size, $ratio);
}
@mixin sprite-holder-2x($icon, $size: false) {
  @include sprite-holder($icon, $size, 0.5);
}


